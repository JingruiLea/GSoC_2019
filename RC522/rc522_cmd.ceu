var byte rc522_PCD_Idle				= 0x00;		// no action; cancels current command execution
var byte rc522_PCD_Mem					= 0x01;		// stores 25 bytes into the internal buffer
var byte rc522_PCD_GenerateRandomID	= 0x02;		// generates a 10-byte random ID number
var byte rc522_PCD_CalcCRC				= 0x03;		// activates the CRC coprocessor or performs a self-test
var byte rc522_PCD_Transmit			= 0x04;		// transmits data from the FIFO buffer
var byte rc522_PCD_NoCmdChange			= 0x07;		// no command change; can be used to modify the CommandReg register bits without affecting the command; for example; the PowerDown bit
var byte rc522_PCD_Receive				= 0x08;		// activates the receiver circuits
var byte rc522_PCD_Transceive 			= 0x0C;		// transmits data from FIFO buffer to antenna and automatically activates the receiver after transmission
var byte rc522_PCD_MFAuthent 			= 0x0E;		// performs the MIFARE standard authentication as a reader
var byte rc522_PCD_SoftReset			= 0x0F;		// resets the MFRC522


var byte rc522_PICC_CMD_REQA			= 0x26;		// REQuest command; Type A. Invites rc522_PICCs in state IDLE to go to READY and prepare for anticollision or selection. 7 bit frame.
var byte rc522_PICC_CMD_WUPA			= 0x52;		// Wake-UP command; Type A. Invites rc522_PICCs in state IDLE and HALT to go to READY(*) and prepare for anticollision or selection. 7 bit frame.
var byte rc522_PICC_CMD_CT				= 0x88;		// Cascade Tag. Not really a command; but used during anti collision.
var byte rc522_PICC_CMD_SEL_CL1		= 0x93;		// Anti collision/Select; Cascade Level 1
var byte rc522_PICC_CMD_SEL_CL2		= 0x95;		// Anti collision/Select; Cascade Level 2
var byte rc522_PICC_CMD_SEL_CL3		= 0x97;		// Anti collision/Select; Cascade Level 3
var byte rc522_PICC_CMD_HLTA			= 0x50;		// HaLT command; Type A. Instructs an ACTIVE rc522_PICC to go to state HALT.
var byte rc522_PICC_CMD_RATS           = 0xE0;     // Request command for Answer To Reset.
// The commands used for MIFARE Classic (from http://www.mouser.com/ds/2/302/MF1S503x-89574.pdf; Section 9)
// Use PCD_MFAuthent to authenticate access to a sector; then use these commands to read/write/modify the blocks on the sector.
// The read/write commands can also be used for MIFARE Ultralight.
var byte rc522_PICC_CMD_MF_AUTH_KEY_A	= 0x60;		// Perform authentication with Key A
var byte rc522_PICC_CMD_MF_AUTH_KEY_B	= 0x61;		// Perform authentication with Key B
var byte rc522_PICC_CMD_MF_READ		= 0x30;		// Reads one 16 byte block from the authenticated sector of the rc522_PICC. Also used for MIFARE Ultralight.
var byte rc522_PICC_CMD_MF_WRITE		= 0xA0;		// Writes one 16 byte block to the authenticated sector of the rc522_PICC. Called "COMPATIBILITY WRITE" for MIFARE Ultralight.
var byte rc522_PICC_CMD_MF_DECREMENT	= 0xC0;		// Decrements the contents of a block and stores the result in the internal data register.
var byte rc522_PICC_CMD_MF_INCREMENT	= 0xC1;		// Increments the contents of a block and stores the result in the internal data register.
var byte rc522_PICC_CMD_MF_RESTORE		= 0xC2;		// Reads the contents of a block into the internal data register.
var byte rc522_PICC_CMD_MF_TRANSFER	= 0xB0;		// Writes the contents of the internal data register to a block.
// The commands used for MIFARE Ultralight (from http://www.nxp.com/documents/data_sheet/MF0ICU1.pdf; Section 8.6)
// The rc522_PICC_CMD_MF_READ and rc522_PICC_CMD_MF_WRITE can also be used for MIFARE Ultralight.
var byte rc522_PICC_CMD_UL_WRITE		= 0xA2;		// Writes one 4 byte page to the rc522_PICC.
